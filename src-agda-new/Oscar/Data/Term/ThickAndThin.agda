{-# OPTIONS --allow-unsolved-metas #-}
module Oscar.Data.Term.ThickAndThin {ùî£} (FunctionName : Set ùî£) where

open import Oscar.Class.ThickAndThin
open import Oscar.Data.Term FunctionName
import Oscar.Data.Term.ThickAndThin.internal FunctionName as ‚ãÜ

instance ThickAndThinTerm : ThickAndThin Term
ThickAndThin.thin ThickAndThinTerm = ‚ãÜ.thin
ThickAndThin.thin-injective ThickAndThinTerm = ‚ãÜ.thin-injective
ThickAndThin.thick ThickAndThinTerm = ‚ãÜ.thick
ThickAndThin.thick‚àòthin=id ThickAndThinTerm = {!!}
ThickAndThin.check ThickAndThinTerm = {!!}
ThickAndThin.thin-check-id ThickAndThinTerm = {!!}

instance ThickAndThinTerms : ‚àÄ {N} ‚Üí ThickAndThin (Terms N)
ThickAndThin.thin ThickAndThinTerms x = ‚ãÜ.thins x
ThickAndThin.thin-injective ThickAndThinTerms y = ‚ãÜ.thins-injective y
ThickAndThin.thick ThickAndThinTerms = ‚ãÜ.thicks
ThickAndThin.thick‚àòthin=id ThickAndThinTerms = {!!}
ThickAndThin.check ThickAndThinTerms = {!!}
ThickAndThin.thin-check-id ThickAndThinTerms = {!!}

open import Oscar.Data.Fin
open import Oscar.Data.Fin.ThickAndThin
open import Oscar.Data.Maybe.properties
open import Oscar.Data.Nat

_for_ : ‚àÄ {n} ‚Üí Term n ‚Üí Fin (suc n) ‚Üí suc n ‚ä∏ n
(t' for x) y = maybe i t' ((check x y))
